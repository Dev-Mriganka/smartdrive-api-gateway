# in api-gateway/src/main/resources/application.yml
server:
  port: 8080
  # Security configuration
  servlet:
    session:
      cookie:
        secure: true
        http-only: true
        same-site: strict
  # Connection and timeout settings
  netty:
    connection-timeout: 30s
    idle-timeout: 30s
  compression:
    enabled: true
  http2:
    enabled: true

spring:
  application:
    name: gateway-service

  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:2}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms

  # âœ… FIXED: Moved cloud config under main spring key
  cloud:
    gateway:
      routes:
        # === AUTH SERVICE ROUTES ===
        
        # Google OAuth2 Social Login routes
        - id: auth-service-social
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/social/**
          filters:
            - name: CircuitBreaker
              args:
                name: auth-service-circuit-breaker
                fallbackUri: forward:/fallback/auth
        
        - id: auth-service-oauth2
          uri: lb://auth-service
          predicates:
            - Path=/auth/oauth2/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: auth-service-circuit-breaker
                fallbackUri: forward:/fallback/auth

        - id: auth-service-well-known
          uri: lb://auth-service
          predicates:
            - Path=/auth/.well-known/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: auth-service-circuit-breaker
                fallbackUri: forward:/fallback/auth

        - id: auth-service-api
          uri: lb://auth-service
          predicates:
            - Path=/auth/api/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: auth-service-circuit-breaker
                fallbackUri: forward:/fallback/auth

        - id: auth-service-direct
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: auth-service-circuit-breaker
                fallbackUri: forward:/fallback/auth

        # === USER SERVICE ROUTES (ORDER MATTERS!) ===
        
        # 1. Most specific first - Public registration
        - id: user-service-register
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/register
            - Method=POST
          filters:
            - name: CircuitBreaker
              args:
                name: user-service-register-cb
                fallbackUri: forward:/fallback/users

        # 2. Email verification  
        - id: user-service-verify-email
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/verify-email
            - Method=GET
          filters:
            - name: CircuitBreaker
              args:
                name: user-service-verify-cb
                fallbackUri: forward:/fallback/users

        # 2.5 Admin creation now handled by general admin routes (requires auth)

        # 3. Admin routes (simplified for debugging)
        - id: user-service-admin
          uri: lb://user-service
          predicates:
            - Path=/api/v1/admin/**
          order: 1

        # 4. General user routes (least specific)
        - id: user-service-general
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: user-service-cb
                fallbackUri: forward:/fallback/users


    loadbalancer:
      cache:
        enabled: true
        ttl: 35s
        capacity: 256
      health-check:
        initial-delay: 0
        interval: 25s

  security:
    oauth2:
      resourceserver:
        jwt:
          # Use JWK Set URI for local token validation (faster!)
          jwk-set-uri: http://auth-service:8085/.well-known/jwks.json
          # JWT decoder configuration - issuer must match token iss claim
          issuer-uri: smartdrive-auth-service

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.smartdrive.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: api-gateway

# Gateway Security Configuration
gateway:
  security:
    internal-secret: ${GATEWAY_SECURITY_INTERNAL_SECRET:internal-gateway-secret-key-2024-minimum-32-chars}
    signature-secret: ${GATEWAY_SECURITY_SIGNATURE_SECRET:signature-secret-key-2024-minimum-32-chars}
  # Rate limiting configuration
  rate-limit:
    enabled: true
    requests-per-minute: ${RATE_LIMIT_RPM:100}
    requests-per-hour: ${RATE_LIMIT_RPH:1000}
    burst-capacity: ${RATE_LIMIT_BURST:150}
  # Circuit breaker configuration
  circuit-breaker:
    failure-rate-threshold: 50
    slow-call-rate-threshold: 50
    slow-call-duration-threshold: 30s
    minimum-number-of-calls: 10
    sliding-window-size: 10

# Resilience4j configuration for CircuitBreaker/TimeLimiter
resilience4j:
  circuitbreaker:
    instances:
      auth-service-circuit-breaker:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 30s
        minimum-number-of-calls: 5
        sliding-window-size: 10
        wait-duration-in-open-state: 10s
      user-service-cb:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 30s
        minimum-number-of-calls: 5
        sliding-window-size: 10
        wait-duration-in-open-state: 10s
      user-service-register-cb:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 30s
        minimum-number-of-calls: 5
        sliding-window-size: 10
        wait-duration-in-open-state: 10s
      user-service-verify-cb:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 30s
        minimum-number-of-calls: 5
        sliding-window-size: 10
        wait-duration-in-open-state: 10s
  timelimiter:
    instances:
      auth-service-circuit-breaker:
        timeout-duration: 30s
        cancel-running-future: false
      user-service-cb:
        timeout-duration: 30s
        cancel-running-future: false
      user-service-register-cb:
        timeout-duration: 30s    # allow enough time for email sending
        cancel-running-future: false
      user-service-verify-cb:
        timeout-duration: 30s
        cancel-running-future: false
